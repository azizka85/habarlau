@use '../app-bar/variables' as app-bar-variables;
@use '../list/variables' as list-variables;
@use '../variables' as global-variables;
@use './variables';

.drawer {
  z-index: (app-bar-variables.$z-index + 2);  

  background-color: $body-bg;
  
  position: fixed;
  top: 0;
  left: 0; 
  width: 0;
  border-color: $border-color;
  display: flex;
  flex-direction: column;
  flex-shrink: 0;
  box-sizing: border-box;
  height: 100vh;
  overflow: hidden;  
  
  transition: width 250ms linear;

  &-open {
    border-right-width: 1px;
    border-right-style: solid;  
    width: 100%;
  }

  &-open, &-hover {
    .drawer-header {
      color: color-contrast($primary);
      background-color: $primary;
    }

    .drawer-account-bar {
      background-color: $primary;

      &-avatar {
        width: variables.$avatar-size;
        height: variables.$avatar-size;

        &-icon {
          width: variables.$avatar-size;
          height: variables.$avatar-size;
        }
      }

      &-actions {
        max-height: variables.$account-actions-max-height;         
        
        a {
          color: color-contrast($primary);
        }
      }
    }    
  }

  &-content {    
    height: 100vh;
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
  }  

  &-header {
    height: app-bar-variables.$row-height;
    display: flex;
    align-items: center;
    justify-content: flex-end;

    &-icon {
      width: 2rem;
      height: 2rem;
      fill: color-contrast($body-bg);
      margin: 0 1rem;
      transform: rotate(0deg);
      transition: transform 250ms linear;

      &-hide {
        transform: rotate(180deg);
      }
    }
  }

  &-account-bar {
    display: flex;
    flex-direction: column;
    margin: variables.$account-bar-margin;
    padding: variables.$account-bar-padding;
    overflow: hidden;
    background-color: $body-bg;
    transition: background-color 250ms linear;
    
    &-avatar {
      display: flex;
      align-items: center;
      justify-content: center;
      width: variables.$avatar-min-size;
      height: variables.$avatar-min-size;
      border-radius: 50%;      
      background-color: $body-bg;
      transition: 
        width 250ms linear,
        height 250ms linear;

      &-icon {
        opacity: 0.3;
        fill: color-contrast($body-bg);
        width: variables.$avatar-min-size;
        height: variables.$avatar-min-size;
        transition: 
          width 250ms linear,
          height 250ms linear;
      }
    }
    
    &-actions {
      display: flex;
      flex-direction: column; 
      max-height: 0;             
      transition: max-height 250ms linear;

      a {
        margin-top: variables.$account-bar-action-margin-top;
        text-decoration: none;
        font-weight: bold;
        color: color-contrast($body-bg);
        overflow: hidden;
        transition: color 250ms linear;
      }
    }
  }

  &-lang-bar {
    display: flex;
    align-items: center;
    height: list-variables.$line-height;
    margin: variables.$lang-bar-margin;
    cursor: pointer;

    &-flag {
      width: 1.5rem;
      height: 1.5rem;
      margin: 0 list-variables.$margin-horizontal;
    }  

    label {
      position: relative;
      cursor: pointer;

      input {
        top: 0;
        left: 0;
        width: 0;
        height: 0;
        position: absolute;        
      }

      .drawer-lang-bar-current {
        display: flex;
        align-items: center;
  
        .drawer-lang-bar-current-icon {
          width: 1rem;
          height: 1rem;
          fill: tint-color(color-contrast($body-bg), 30%);          
          margin-left: list-variables.$margin-horizontal;
          transform: rotate(0deg);
          transition: transform 200ms linear;
        }

        .drawer-lang-bar-current-progress {
          width: 1rem;
          height: 1rem;
          margin-left: list-variables.$margin-horizontal;
          display: none;
        }

        &-loading {
          .drawer-lang-bar-current-icon {
            display: none;
          }

          .drawer-lang-bar-current-progress {
            display: block;
          }
        }
      }

      input:checked ~ .drawer-lang-bar-current .drawer-lang-bar-current-icon {
        transform: rotate(-180deg);
      }

      .list {
        background-color: $body-bg;
        position: absolute;
        top: variables.$lang-list-top;
        z-index: app-bar-variables.$z-index + 3;
        max-height: 0;
        opacity: 0;
        transition: max-height 200ms linear, opacity 200ms linear;
        overflow: hidden;

        &-item {
          padding-right: list-variables.$margin-horizontal;
        }
      }

      input:checked ~ .list {
        max-height: 10rem;
        opacity: 1;
        box-shadow: $box-shadow-lg;        
      }
    }
  }
}

// laptop
@media screen and (min-width: (global-variables.$breakpoint-sm + 1px)) {
  .drawer {
    z-index: variables.$z-index;
    width: variables.$min-width;
    border-right-width: 1px;
    border-right-style: solid;  

    &-hover:not(&-open) {
      box-shadow: $box-shadow-lg;
    }

    &-open, &-hover {
      width: variables.$width;
    }

    &-open ~ .main-content {
      margin-left: variables.$width;
    }
  }

  .main-content {
    margin-left: variables.$min-width;
  
    transition: margin-left 250ms linear;
  }
}
